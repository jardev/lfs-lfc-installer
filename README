What is it?
===========

This is the installer for LFS/LFC

LFS is an online shop based on Python, Django and jQuery.
LFC is a CMS based on Python, Django and jQuery.

Currently we support for LFS 0.5.0b6 and LFC 1.0.2


Requirements
============

* Python 2.6.X
* A RDBMS of your choice (PostgreSQL, MySQL, SQLite or Oracle)


Installation
============

1.  $ git clone git://github.com/jardev/lfs-lfc-installer.git
2.  $ cd lfs-lfc-installer/
3.  $ python bootstrap.py
4.  $ bin/buildout -v
5.  Create your own project/settings_local.py if you want to change some settings.
    By default the database is in sqlite3 and stored in db.sqlite
6.  $ bin/django syncdb (see Troubleshoots)
7.  $ bin/django lfc_init
8.  $ bin/django lfs_init
9.  Remove uneccessary portlets Slot-s (they wil be duplicated for Left and Right, kill the the second pair)
10.  $ bin/django runserver
11. Browse to http://localhost:8000/


Troubleshoots
=============

If you have version conflicts while doing the 4th installation step you need
to open eggs/<package-that-required-conflict-library>.egg/EGG-INFO/requires.txt
and patch it manually. For example there could be a problem with django-portlets.
LFS needs verion 1.0b6 and LFC needs 1.0. So you can patch
eggs/django_lfs-0.5.0b6-py2.6.egg/EGG-INFO/requires.txt and change
line:
django-portlets == 1.0b6
to:
django-portlets == 1.0

If you have troubles when doing syncdb similar to:
Error: One or more models did not validate:
lfc.file: Accessor for field 'content_type' clashes with related field 'ContentType.files'. Add a related_name argument to the definition for 'content_type'.
lfc.file: Reverse query name for field 'content_type' clashes with related field 'ContentType.files'. Add a related_name argument to the definition for 'content_type'.
catalog.file: Accessor for field 'content_type' clashes with related field 'ContentType.files'. Add a related_name argument to the definition for 'content_type'.
catalog.file: Reverse query name for field 'content_type' clashes with related field 'ContentType.files'. Add a related_name argument to the definition for 'content_type'.
Then open eggs/django_lfs-0.5.0b6-py2.6.egg/lfs/catalog/models.py
and apply next patch:
1750:
- content_type = models.ForeignKey(ContentType, verbose_name=_(u"Content type"), related_name="files", blank=True, null=True)
+ content_type = models.ForeignKey(ContentType, verbose_name=_(u"Content type"), related_name="lfs_files", blank=True, null=True)
(change related_name from "files" to "lfs_files")


More Information
================

LFS:
* `Official page <http://www.getlfs.com/>`_
* `Documentation on PyPI <http://packages.python.org/django-lfs/index.html>`_
* `Releases on PyPI <http://pypi.python.org/pypi/django-lfs>`_
* `Source code on bitbucket.org <http://bitbucket.org/diefenbach/django-lfs>`_
* `Google Group <http://groups.google.com/group/django-lfs>`_
* `lfsproject on Twitter <http://twitter.com/lfsproject>`_
* `IRC <irc://irc.freenode.net/django-lfs>`_

LFC:
* `Official page <http://www.lfcproject.com/>`_
* `Documentation on PyPI <http://packages.python.org/django-lfc/index.html>`_
* `Releases on PyPI <http://pypi.python.org/pypi/django-lfc>`_
* `Source code on bitbucket.org <http://bitbucket.org/diefenbach/django-lfc>`_
* `Google Group <http://groups.google.com/group/django-lfc>`_
* `lfcproject on Twitter <http://twitter.com/lfcproject>`_
* `IRC <irc://irc.freenode.net/django-lfc>`_